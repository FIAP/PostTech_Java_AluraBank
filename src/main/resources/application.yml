alura:
  database:
    url: jdbc:postgresql://localhost:5432/alurabank
    user: postgres
    password: postgres
  keycloak:
    url: http://192.168.5.137:8180/realms/alura

server:
  port: ${PORT:8080}

spring:
  datasource:
    url: ${DATABASE_CONNECTION_URL:${alura.database.url}}
    username: ${DATABASE_USER:${alura.database.user}}
    password: ${DATABASE_PASSWORD:${alura.database.password}}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: user-manager
            client-secret: RTe74iiDIxw9aemgIYPOryviVgBM6tPW
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            token-uri: http://localhost:8180/realms/alura/protocol/openid-connect/token
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_REALM_URL:${alura.keycloak.url}}
          jwk-set-uri: ${KEYCLOAK_REALM_URL:${alura.keycloak.url}}/protocol/openid-connect/certs
  mail:
    host: localhost
    port: 1025
    username: ""
    password: ""
    properties:
      mail:
        transport:
          protocol: smtp
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        default-requeue-rejected: false

springdoc:
  swagger-ui:
    oauth:
      client-id: app
      scopes: openid
      use-pkce-with-authorization-code-grant: true

keycloak:
  user:
    api:
      url: http://localhost:8180/admin/realms/alura
      created-user-uri-template: "${keycloak.user.api.url}/users/{id}"




---
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:tc:postgresql:13.2:////aluratest
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
  jpa:
    hibernate:
      ddl-auto: create-drop
